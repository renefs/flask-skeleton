from flask import Blueprint
from flask import flash
from flask import redirect
from flask import render_template
from flask import request
from flask import url_for
from flask_security.forms import ChangePasswordForm
from flask_security.utils import encrypt_password
from flask_login import login_required, logout_user, current_user, login_user

from app.extensions import db
from app.forms.users import RegisterForm, ChangeSocialPasswordForm
from app.models import user_datastore

module = Blueprint('users', __name__)


@module.route("/logout")
@login_required
def logout():
    logout_user()
    flash("You have logged out")
    return redirect(url_for("common.index"))


@module.route('/register', methods=['GET', 'POST'])
def register(provider_id=None):
    if current_user.is_authenticated:
        return redirect(request.referrer or '/')

    form = RegisterForm()

    if form.validate_on_submit():
        user = user_datastore.create_user(email=form.email.data, password=encrypt_password(form.password.data))
        user_datastore.commit()

        if login_user(user):
            user_datastore.commit()
            flash('Account created successfully', 'info')
            return redirect(url_for('users.profile'))

        return render_template('thanks.html', user=user)

    login_failed = int(request.args.get('login_failed', 0))

    return render_template('users/register.html',
                           form=form,
                           login_failed=login_failed
                           )


@module.route('/profile')
@login_required
def profile():

    # if not current_app.social.facebook:
    #     facebook_conn = None
    # else:
    #     facebook_conn=current_app.social.facebook.get_connection()
    #
    # if not current_app.social.google:
    #     google_conn = None
    # else:
    #     google_conn = current_app.social.google.get_connection()

    return render_template('users/_profile_social.html',
                           # facebook_conn=facebook_conn,
                           # google_conn=google_conn,
                           # payments_enabled=payments_enabled
                           )


@module.route('/change-password', methods=['GET', 'POST'])
@login_required
def change_password():
    change_password_form = ChangePasswordForm()
    change_social_password_form = ChangeSocialPasswordForm(prefix="social")

    if change_password_form.validate_on_submit():
        current_user.password = encrypt_password(change_password_form.new_password.data)
        current_user.has_autogenerated_password = False
        db.session.commit()
        flash("Password changed successfully", "success")
        return redirect(url_for('users.profile'))

    if change_social_password_form.validate_on_submit():
        current_user.password = encrypt_password(change_social_password_form.password.data)
        current_user.has_autogenerated_password = False
        db.session.commit()
        flash("Password changed successfully", "success")
        return redirect(url_for('users.profile'))

    return render_template('users/change_password.html', change_password_form=change_password_form,
                           change_social_password_form=change_social_password_form)